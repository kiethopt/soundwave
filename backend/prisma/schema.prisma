// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(cuid())
  email String @unique
  username String @unique
  password String
  name String?
  avatar String?
  role Role @default(USER)
  isActive Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  albums Album[]
  tracks Track[]

  @@index([email])
  @@index([username])
}

model Album {
  id String @id @default(cuid())
  title String
  artist String
  coverUrl String?
  releaseDate DateTime
  trackCount Int
  tracks Track[]
  uploadedBy User @relation(fields: [userId], references: [id])
  userId String
  discordMessageId String @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isActive Boolean @default(true)

  @@index([title])
  @@index([artist])
  @@index([userId])
}

model Track {
  id String @id @default(cuid())
  title String
  artist String
  featuredArtists String?
  duration Int
  releaseDate DateTime
  trackNumber Int?
  coverUrl String?
  audioUrl String
  audioMessageId String @unique
  album Album? @relation(fields: [albumId], references: [id])
  albumId String?
  uploadedBy User @relation(fields: [userId], references: [id])
  userId String
  discordMessageId String @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isActive Boolean @default(true)

  @@index([title])
  @@index([artist])
  @@index([albumId])
  @@index([userId])
}

enum Role {
  USER
  ADMIN
}